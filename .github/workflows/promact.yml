name: CICD
on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: dotnet-app
      TAG: ${{ github.sha }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Docker build and add tag
        run: docker build -t shubhampawar819/$IMAGE_NAME:$TAG -f Dockerfile .

      - name: Docker Registry login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to docker registry
        run: docker push shubhampawar819/$IMAGE_NAME:$TAG

      - name: Print success message!
        run: echo "Image pushed successfully with name shubhampawar819/$IMAGE_NAME:$TAG"

    outputs:
      image_tag: ${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env: 
      IMAGE_TAG: "${{ needs.build.outputs.image_tag }}"
      EKS_CLUSTER_NAME: eks-cluster-promact 
      AWS_REGION: ap-south-1

    steps:
      
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to EKS
        run: |
          sed -i.bak "s#latest#$IMAGE_TAG#g" deployment.yaml && \
          kubectl apply -f deployment.yaml
